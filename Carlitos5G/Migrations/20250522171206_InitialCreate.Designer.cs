// <auto-generated />
using System;
using Carlitos5G.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Carlitos5G.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250522171206_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Carlitos5G.Models.Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("Id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Email");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Image");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Password");

                    b.Property<string>("Profession")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Profession");

                    b.Property<DateTime?>("UpdationDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("UpdationDate");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Admins", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("94837ced-f138-462e-b5fb-84103adc7416"),
                            Email = "admin@carlitos.com",
                            Image = "admin1.jpg",
                            Name = "Carlos Admin",
                            Password = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4",
                            Profession = "Coordinador",
                            UpdationDate = new DateTime(2025, 5, 22, 17, 12, 6, 42, DateTimeKind.Utc).AddTicks(958)
                        },
                        new
                        {
                            Id = new Guid("3eb997b0-3c2e-4cd5-a9c5-419edac2caf6"),
                            Email = "luisa@carlitos.com",
                            Image = "admin2.jpg",
                            Name = "Luisa Manager",
                            Password = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4",
                            Profession = "Gestora Educativa",
                            UpdationDate = new DateTime(2025, 5, 22, 17, 12, 6, 42, DateTimeKind.Utc).AddTicks(963)
                        });
                });

            modelBuilder.Entity("Carlitos5G.Models.AdminTicket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.HasKey("Id");

                    b.ToTable("admin_ticket", (string)null);
                });

            modelBuilder.Entity("Carlitos5G.Models.AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Changes")
                        .HasColumnType("TEXT");

                    b.Property<string>("PerformedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("RecordId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("AuditLogs", (string)null);
                });

            modelBuilder.Entity("Carlitos5G.Models.Avance", b =>
                {
                    b.Property<Guid>("ContentId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("content_id");

                    b.Property<Guid>("PlaylistId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("playlist_id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)")
                        .HasColumnName("type");

                    b.Property<Guid>("UserId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("user_id");

                    b.HasIndex("ContentId");

                    b.HasIndex("PlaylistId");

                    b.HasIndex("UserId");

                    b.ToTable("avance", (string)null);
                });

            modelBuilder.Entity("Carlitos5G.Models.Bookmark", b =>
                {
                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)")
                        .HasColumnName("user_id");

                    b.Property<Guid>("PlaylistId")
                        .HasColumnType("char(36)")
                        .HasColumnName("playlist_id");

                    b.HasKey("UserId", "PlaylistId");

                    b.HasIndex("PlaylistId");

                    b.ToTable("bookmark", (string)null);
                });

            modelBuilder.Entity("Carlitos5G.Models.Certificate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("Id");

                    b.Property<string>("CertificatePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("certificate_path");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<Guid?>("PlaylistId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("playlist_id");

                    b.Property<Guid?>("UserId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("PlaylistId");

                    b.HasIndex("UserId");

                    b.ToTable("certificates", (string)null);
                });

            modelBuilder.Entity("Carlitos5G.Models.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("Id");

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("comment");

                    b.Property<Guid?>("ContentId")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("char(36)")
                        .HasColumnName("content_id");

                    b.Property<DateTime?>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<Guid>("TutorId")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("char(36)")
                        .HasColumnName("tutor_id");

                    b.Property<Guid>("UserId")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("char(36)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("ContentId");

                    b.HasIndex("TutorId");

                    b.HasIndex("UserId");

                    b.ToTable("comments", (string)null);
                });

            modelBuilder.Entity("Carlitos5G.Models.Contact", b =>
                {
                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("message");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<int>("Number")
                        .HasColumnType("int")
                        .HasColumnName("number");

                    b.ToTable("contact", (string)null);
                });

            modelBuilder.Entity("Carlitos5G.Models.Download", b =>
                {
                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PlaylistId")
                        .HasColumnType("char(36)")
                        .HasColumnName("playlist_id");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)")
                        .HasColumnName("user_id");

                    b.HasIndex("PlaylistId");

                    b.HasIndex("UserId");

                    b.ToTable("download", (string)null);
                });

            modelBuilder.Entity("Carlitos5G.Models.Eventoscalendar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("Id");

                    b.Property<string>("ColorEvento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("color_evento");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("estado");

                    b.Property<string>("Evento")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("evento");

                    b.Property<string>("FechaFin")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("fecha_fin");

                    b.Property<string>("FechaInicio")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("fecha_inicio");

                    b.Property<Guid?>("PlaylistId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("playlist_id");

                    b.Property<Guid?>("TutorId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("tutor_id");

                    b.Property<Guid?>("UserId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("PlaylistId");

                    b.HasIndex("TutorId");

                    b.HasIndex("UserId");

                    b.ToTable("eventoscalendar", (string)null);
                });

            modelBuilder.Entity("Carlitos5G.Models.Like", b =>
                {
                    b.Property<Guid?>("ContentId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("content_id");

                    b.Property<Guid>("TutorId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("tutor_id");

                    b.Property<Guid>("UserId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("user_id");

                    b.HasIndex("ContentId");

                    b.HasIndex("TutorId");

                    b.HasIndex("UserId");

                    b.ToTable("likes", (string)null);
                });

            modelBuilder.Entity("Carlitos5G.Models.Ova", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("Id");

                    b.Property<string>("Iframe")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("iframe");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<Guid>("PlaylistId")
                        .HasMaxLength(20)
                        .HasColumnType("char(20)")
                        .HasColumnName("playlist_id");

                    b.HasKey("Id");

                    b.HasIndex("PlaylistId");

                    b.ToTable("ovas", (string)null);
                });

            modelBuilder.Entity("Carlitos5G.Models.Playlist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("Id");

                    b.Property<string>("Categoria")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValue("nn")
                        .HasColumnName("categoria");

                    b.Property<DateTime?>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("description");

                    b.Property<string>("Iframe")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("iframe");

                    b.Property<bool?>("IsDiplomado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("is_diplomado");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("deactive")
                        .HasColumnName("status");

                    b.Property<string>("Thumb")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("thumb");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("title");

                    b.Property<Guid>("TutorId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("tutor_id");

                    b.Property<DateTime?>("UpdationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updation_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.HasIndex("TutorId");

                    b.ToTable("playlist", (string)null);
                });

            modelBuilder.Entity("Carlitos5G.Models.Prequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("Id");

                    b.Property<string>("Company")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("company");

                    b.Property<string>("Contactno")
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("contactno");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Others")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("others");

                    b.Property<DateTime?>("PostingDate")
                        .HasColumnType("datetime")
                        .HasColumnName("posting_date");

                    b.Property<string>("Query")
                        .HasColumnType("text")
                        .HasColumnName("query");

                    b.Property<string>("Remark")
                        .HasColumnType("text")
                        .HasColumnName("remark");

                    b.Property<string>("Services")
                        .HasColumnType("text")
                        .HasColumnName("services");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("prequest", (string)null);
                });

            modelBuilder.Entity("Carlitos5G.Models.Tblresult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("Id");

                    b.Property<Guid>("ClassId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("class_id");

                    b.Property<string>("Marks")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("marks");

                    b.Property<DateTime?>("PostingDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("posting_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<Guid>("StudentId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("student_id");

                    b.Property<string>("SubjectsId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("subjects_id");

                    b.Property<DateTime?>("UpdationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updation_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("tblresult", (string)null);
                });

            modelBuilder.Entity("Carlitos5G.Models.Tblsubject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("Creationdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationdate")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<Guid>("PlaylistId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("playlist_id");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("subject_name");

                    b.Property<DateTime?>("UpdationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updation_date");

                    b.HasKey("Id");

                    b.HasIndex("PlaylistId");

                    b.ToTable("tblsubjects", (string)null);
                });

            modelBuilder.Entity("Carlitos5G.Models.Ticket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("Id");

                    b.Property<string>("AdminRemark")
                        .HasColumnType("longtext")
                        .HasColumnName("admin_remark");

                    b.Property<DateTime?>("AdminRemarkDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("admin_remark_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Attachment")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("attachment");

                    b.Property<Guid?>("EmailId")
                        .HasMaxLength(255)
                        .HasColumnType("char(255)")
                        .HasColumnName("email_id");

                    b.Property<DateTime?>("PostingDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("posting_date");

                    b.Property<string>("Prioprity")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("prioprity");

                    b.Property<string>("Status")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("status");

                    b.Property<string>("Subject")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("subject");

                    b.Property<string>("TaskType")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("task_type");

                    b.Property<string>("Ticket1")
                        .HasColumnType("longtext")
                        .HasColumnName("ticket");

                    b.Property<Guid?>("TicketId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("ticket_id");

                    b.HasKey("Id");

                    b.ToTable("ticket", (string)null);
                });

            modelBuilder.Entity("Carlitos5G.Models.Tutor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("Id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Image")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("image");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("password");

                    b.Property<string>("Profession")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("profession");

                    b.Property<DateTime?>("UpdationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updationDate")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("tutors", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a7aa881b-36f9-4be3-bf34-9cfa31506fb4"),
                            Email = "mario@carlitos.com",
                            Image = "/images/145d4cd3-a9c6-4ad7-aa36-3712fc918747.jpg",
                            Name = "Mario Pérez",
                            Password = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4",
                            Profession = "Matemático",
                            UpdationDate = new DateTime(2025, 5, 22, 17, 12, 6, 42, DateTimeKind.Utc).AddTicks(1079)
                        },
                        new
                        {
                            Id = new Guid("33b6bfc6-c9a4-43ee-8326-48bd8e74b8d9"),
                            Email = "ana@carlitos.com",
                            Image = "/images/145d4cd3-a9c6-4ad7-aa36-3712fc918748.jpg",
                            Name = "Ana López",
                            Password = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4",
                            Profession = "Física",
                            UpdationDate = new DateTime(2025, 5, 22, 17, 12, 6, 42, DateTimeKind.Utc).AddTicks(1091)
                        });
                });

            modelBuilder.Entity("Carlitos5G.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("Id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("EtapaEducativa")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("etapa_educativa");

                    b.Property<DateTime?>("FechaAsig")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_asig")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("genero");

                    b.Property<string>("Grado")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("grado");

                    b.Property<string>("Image")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("image");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("1234")
                        .HasColumnName("password");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("telefono");

                    b.Property<DateTime?>("UpdationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updationDate")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("4dbcb321-161c-4cb6-92a7-5c71774554e8"),
                            Email = "juan@carlitos.com",
                            EtapaEducativa = "Primaria",
                            FechaAsig = new DateTime(2025, 5, 22, 17, 12, 6, 42, DateTimeKind.Utc).AddTicks(1124),
                            Genero = "Masculino",
                            Grado = "4to",
                            Image = "user1.jpg",
                            Name = "Juan Estudiante",
                            Password = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4",
                            Telefono = "555-1234",
                            UpdationDate = new DateTime(2025, 5, 22, 17, 12, 6, 42, DateTimeKind.Utc).AddTicks(1125)
                        },
                        new
                        {
                            Id = new Guid("2e4bde50-a245-4083-92af-9171352f9277"),
                            Email = "lucia@carlitos.com",
                            EtapaEducativa = "Secundaria",
                            FechaAsig = new DateTime(2025, 5, 22, 17, 12, 6, 42, DateTimeKind.Utc).AddTicks(1128),
                            Genero = "Femenino",
                            Grado = "2do",
                            Image = "user2.jpg",
                            Name = "Lucía Alumna",
                            Password = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4",
                            Telefono = "555-5678",
                            UpdationDate = new DateTime(2025, 5, 22, 17, 12, 6, 42, DateTimeKind.Utc).AddTicks(1129)
                        });
                });

            modelBuilder.Entity("Carlitos5G.Models.UserTicket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("Id");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("address");

                    b.Property<string>("AltEmail")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("alt_email");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Gender")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("gender");

                    b.Property<string>("Mobile")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("mobile");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<DateTime?>("PostingDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("posting_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("user_ticket", (string)null);
                });

            modelBuilder.Entity("Carlitos5G.Models.Usercheck", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("Id");

                    b.Property<string>("City")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("city");

                    b.Property<string>("Country")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("country");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<byte[]>("Ip")
                        .HasMaxLength(16)
                        .HasColumnType("varbinary(16)")
                        .HasColumnName("ip");

                    b.Property<string>("Logindate")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("logindate");

                    b.Property<string>("Logintime")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("logintime");

                    b.Property<byte[]>("Mac")
                        .HasMaxLength(16)
                        .HasColumnType("varbinary(16)")
                        .HasColumnName("mac");

                    b.Property<Guid?>("UserId")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("char(36)")
                        .HasColumnName("user_id");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("usercheck", (string)null);
                });

            modelBuilder.Entity("Carlitos5G.Models.Videogame", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("Id");

                    b.Property<string>("Carpeta")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("carpeta");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("imagen");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(400)
                        .IsUnicode(false)
                        .HasColumnType("varchar(400)")
                        .HasColumnName("name");

                    b.Property<Guid>("TutorId")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("char(36)")
                        .HasColumnName("tutor_id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("TutorId");

                    b.ToTable("videogame", (string)null);
                });

            modelBuilder.Entity("Content", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("description");

                    b.Property<string>("MediaPath")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("media_path");

                    b.Property<Guid>("PlaylistId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("playlist_id");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("deactive")
                        .HasColumnName("status");

                    b.Property<string>("ThumbnailPath")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("thumbnail_path");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("title");

                    b.Property<Guid>("TutorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("tutor_id");

                    b.Property<string>("Type")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasDefaultValue("Video")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("PlaylistId");

                    b.HasIndex("TutorId");

                    b.ToTable("content", (string)null);
                });

            modelBuilder.Entity("Flipbook", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("description");

                    b.Property<string>("Directory")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("directory");

                    b.Property<string>("MediaPath")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("media_path");

                    b.Property<int?>("Pages")
                        .HasColumnType("int")
                        .HasColumnName("pages");

                    b.Property<Guid>("PlaylistId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("playlist_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.Property<string>("ThumbnailPath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("title");

                    b.Property<Guid>("TutorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("tutor_id");

                    b.Property<string>("Type")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasDefaultValue("Libro")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("PlaylistId");

                    b.HasIndex("TutorId");

                    b.ToTable("flipbook", (string)null);
                });

            modelBuilder.Entity("Carlitos5G.Models.Avance", b =>
                {
                    b.HasOne("Content", "Content")
                        .WithMany()
                        .HasForeignKey("ContentId")
                        .IsRequired();

                    b.HasOne("Carlitos5G.Models.Playlist", "Playlist")
                        .WithMany()
                        .HasForeignKey("PlaylistId")
                        .IsRequired();

                    b.HasOne("Carlitos5G.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired();

                    b.Navigation("Content");

                    b.Navigation("Playlist");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Carlitos5G.Models.Bookmark", b =>
                {
                    b.HasOne("Carlitos5G.Models.Playlist", "Playlist")
                        .WithMany()
                        .HasForeignKey("PlaylistId")
                        .IsRequired();

                    b.HasOne("Carlitos5G.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Playlist");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Carlitos5G.Models.Certificate", b =>
                {
                    b.HasOne("Carlitos5G.Models.Playlist", "Playlist")
                        .WithMany("Certificates")
                        .HasForeignKey("PlaylistId");

                    b.HasOne("Carlitos5G.Models.User", "User")
                        .WithMany("Certificates")
                        .HasForeignKey("UserId");

                    b.Navigation("Playlist");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Carlitos5G.Models.Comment", b =>
                {
                    b.HasOne("Content", "Content")
                        .WithMany("Comments")
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Carlitos5G.Models.Tutor", "Tutor")
                        .WithMany("Comments")
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Carlitos5G.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Content");

                    b.Navigation("Tutor");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Carlitos5G.Models.Download", b =>
                {
                    b.HasOne("Carlitos5G.Models.Playlist", "Playlist")
                        .WithMany()
                        .HasForeignKey("PlaylistId")
                        .IsRequired();

                    b.HasOne("Carlitos5G.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired();

                    b.Navigation("Playlist");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Carlitos5G.Models.Eventoscalendar", b =>
                {
                    b.HasOne("Carlitos5G.Models.Playlist", "Playlist")
                        .WithMany("Eventoscalendars")
                        .HasForeignKey("PlaylistId");

                    b.HasOne("Carlitos5G.Models.Tutor", "Tutor")
                        .WithMany("Eventoscalendars")
                        .HasForeignKey("TutorId");

                    b.HasOne("Carlitos5G.Models.User", "User")
                        .WithMany("Eventoscalendars")
                        .HasForeignKey("UserId");

                    b.Navigation("Playlist");

                    b.Navigation("Tutor");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Carlitos5G.Models.Like", b =>
                {
                    b.HasOne("Content", "Content")
                        .WithMany()
                        .HasForeignKey("ContentId");

                    b.HasOne("Carlitos5G.Models.Tutor", "Tutor")
                        .WithMany()
                        .HasForeignKey("TutorId")
                        .IsRequired();

                    b.HasOne("Carlitos5G.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired();

                    b.Navigation("Content");

                    b.Navigation("Tutor");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Carlitos5G.Models.Ova", b =>
                {
                    b.HasOne("Carlitos5G.Models.Playlist", "Playlist")
                        .WithMany("Ovas")
                        .HasForeignKey("PlaylistId")
                        .IsRequired();

                    b.Navigation("Playlist");
                });

            modelBuilder.Entity("Carlitos5G.Models.Playlist", b =>
                {
                    b.HasOne("Carlitos5G.Models.Tutor", "Tutor")
                        .WithMany("Playlists")
                        .HasForeignKey("TutorId")
                        .IsRequired();

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("Carlitos5G.Models.Tblresult", b =>
                {
                    b.HasOne("Carlitos5G.Models.User", "Student")
                        .WithMany("Tblresults")
                        .HasForeignKey("StudentId")
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Carlitos5G.Models.Tblsubject", b =>
                {
                    b.HasOne("Carlitos5G.Models.Playlist", "Playlist")
                        .WithMany("Tblsubjects")
                        .HasForeignKey("PlaylistId")
                        .IsRequired();

                    b.Navigation("Playlist");
                });

            modelBuilder.Entity("Carlitos5G.Models.Usercheck", b =>
                {
                    b.HasOne("Carlitos5G.Models.User", "User")
                        .WithMany("Userchecks")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Carlitos5G.Models.Videogame", b =>
                {
                    b.HasOne("Carlitos5G.Models.Tutor", "Tutor")
                        .WithMany("Videogames")
                        .HasForeignKey("TutorId")
                        .IsRequired();

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("Content", b =>
                {
                    b.HasOne("Carlitos5G.Models.Playlist", "Playlist")
                        .WithMany("Contents")
                        .HasForeignKey("PlaylistId")
                        .IsRequired();

                    b.HasOne("Carlitos5G.Models.Tutor", "Tutor")
                        .WithMany("Contents")
                        .HasForeignKey("TutorId")
                        .IsRequired();

                    b.Navigation("Playlist");

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("Flipbook", b =>
                {
                    b.HasOne("Carlitos5G.Models.Playlist", "Playlist")
                        .WithMany("Flipbooks")
                        .HasForeignKey("PlaylistId")
                        .IsRequired();

                    b.HasOne("Carlitos5G.Models.Tutor", "Tutor")
                        .WithMany("Flipbooks")
                        .HasForeignKey("TutorId")
                        .IsRequired();

                    b.Navigation("Playlist");

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("Carlitos5G.Models.Playlist", b =>
                {
                    b.Navigation("Certificates");

                    b.Navigation("Contents");

                    b.Navigation("Eventoscalendars");

                    b.Navigation("Flipbooks");

                    b.Navigation("Ovas");

                    b.Navigation("Tblsubjects");
                });

            modelBuilder.Entity("Carlitos5G.Models.Tutor", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Contents");

                    b.Navigation("Eventoscalendars");

                    b.Navigation("Flipbooks");

                    b.Navigation("Playlists");

                    b.Navigation("Videogames");
                });

            modelBuilder.Entity("Carlitos5G.Models.User", b =>
                {
                    b.Navigation("Certificates");

                    b.Navigation("Comments");

                    b.Navigation("Eventoscalendars");

                    b.Navigation("Tblresults");

                    b.Navigation("Userchecks");
                });

            modelBuilder.Entity("Content", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
